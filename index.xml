<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>My New Hugo Site</title>
    <link>https://hhu-vincent.github.io/</link>
    <description>Recent content on My New Hugo Site</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 20 Jul 2020 15:53:59 +0800</lastBuildDate>
    
        <atom:link href="https://hhu-vincent.github.io/index.xml" rel="self" type="application/rss+xml" />
    
    
    
        <item>
        <title>Blog</title>
        <link>https://hhu-vincent.github.io/post/blog/</link>
        <pubDate>Mon, 20 Jul 2020 15:53:59 +0800</pubDate>
        
        <guid>https://hhu-vincent.github.io/post/blog/</guid>
        <description>My New Hugo Site https://hhu-vincent.github.io/post/blog/ -&lt;p&gt;如何用Hugo搭建个人网站
下载和安装Hugo&lt;/p&gt;
&lt;p&gt;Hugo是用Go语言写的，可以直接下载，不需要额外的依赖。&lt;/p&gt;
&lt;p&gt;win64x对应的是hugo_x.xx.x_Windows-64bit.zip，下载后创建安装目录，例如D:\Hugo，之下建两个子目录bin和Sites，然后解压，例如解压到D:\Hugo\bin，把解压的hugo_x.xx.x_windows_amd64.exe文件重命名为hugo.exe，然后加到环境变量Path里，方便在命令行里使用。&lt;/p&gt;
&lt;p&gt;添加成功后打开cmd或者PowerShell，运行命令hugo version，如果安装成功，会输出Hugo Static Site Generator vx.xx.x
搭建个人网站&lt;/p&gt;
&lt;p&gt;首先要确定自己要搭建什么网站，我要建的是托管到Github的用户网站，按照Github Pages规则，网站名应该是&amp;lt;username.github.io&amp;gt;，所以我第一步创建网站用以下命令：
cd D:\Hugo\Sites
hugo new site brent-li.github.io&lt;/p&gt;
&lt;p&gt;之后在Site目录下多了一个brent-li.github.io文件夹，进入文件夹可以看到目录结构如下：
|&amp;ndash; archetypes
|&amp;ndash; config.toml
|&amp;ndash; content
|&amp;ndash; data
|&amp;ndash; layouts
|&amp;ndash; static&lt;/p&gt;
&lt;p&gt;archetypes目录里可以放一些原型，用于hugo新建内容的配置属性。config.toml是网站的配置属性文件。content文件夹里放你网站的内容，例如你发布的博客文章。data目录是Hugo使用的配置文件存放的地方。layout目录存放布局内容。static目录存放静态资源如图片、css等。&lt;/p&gt;
&lt;p&gt;接下来我们先在content里放点东西。命令如下：
cd xxx.github.io
hugo new post/开博大吉.md&lt;/p&gt;
&lt;h2 id=&#34;hugo会在content目录下创建post目录在post目录下创建开博大吉md文件之后打开md文件里面已经有些内容&#34;&gt;Hugo会在content目录下创建post目录，在post目录下创建开博大吉.md文件。之后打开md文件，里面已经有些内容&lt;/h2&gt;
&lt;h2 id=&#34;draft-true&#34;&gt;title: &amp;ldquo;开博大吉&amp;rdquo;
date: 2019-08-13T14:49:45+08:00
draft: true&lt;/h2&gt;
&lt;h2 id=&#34;---包起来的内容是toml配置信息叫作扉页front-matter默认这3项可以再添加一些其中draft是true时hugo不会真正发布它要发布时改成false修改后的扉页如下&#34;&gt;&amp;mdash;包起来的内容是TOML配置信息，叫作扉页(front matter)，默认这3项，可以再添加一些，其中draft是true时Hugo不会真正发布它，要发布时改成false。修改后的扉页如下：&lt;/h2&gt;
&lt;h2 id=&#34;share--true&#34;&gt;date = &amp;ldquo;2017-02-08T22:07:46+08:00&amp;rdquo;
title = &amp;ldquo;Scala学习笔记之模式匹配&amp;rdquo;
draft = false
tags = [&amp;ldquo;scala&amp;rdquo;,&amp;ldquo;pattern matching&amp;rdquo;,&amp;ldquo;模式匹配&amp;rdquo;]
share = true&lt;/h2&gt;
&lt;p&gt;然后再把我的博客内容复制进md文件，一篇博客完成了。
本地测试&lt;/p&gt;
&lt;p&gt;Hugo自带服务器，可以用命令行启动：
hugo server -D&lt;/p&gt;
&lt;p&gt;服务器启动后访问http://localhost:1313访问网站，发现问题可以及时修改。
发布到github&lt;/p&gt;
&lt;p&gt;本地测试网站没有问题后，就可以准备发布了。执行以下命令&lt;/p&gt;
&lt;p&gt;hugo -t casper
Hugo将编译所有文件并输出到public目录，你需要在github上创建repository，名字就是&amp;lt;你的用户名&amp;gt;.github.io，创建完后，返回你本地命令行，进入public目录，执行以下命令：
git init
git add .
git commit -v&lt;/p&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;p&gt;git remote add origin &lt;a href=&#34;mailto:git@github.com&#34;&gt;git@github.com&lt;/a&gt;:xxx.github.io.git
git push -u origin master&lt;/p&gt;
&lt;p&gt;稍等片刻后，打开&amp;lt;你的用户名&amp;gt;.github.io网址，就可以看到你的个人网站了。&lt;/p&gt;
&lt;p&gt;作者：D_ing
链接：https://www.jianshu.com/p/92ef4eb318a2
来源：简书
著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。&lt;/p&gt;
- https://hhu-vincent.github.io/post/blog/ - </description>
        </item>
    
    
  </channel>
</rss> 