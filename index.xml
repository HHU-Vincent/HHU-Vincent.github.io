<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Vincent</title>
    <link>https://hhu-vincent.github.io/</link>
    <description>Recent content on Vincent</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 14 May 2021 10:06:59 +0800</lastBuildDate>
    
        <atom:link href="https://hhu-vincent.github.io/index.xml" rel="self" type="application/rss+xml" />
    
    
    
        <item>
        <title>[转载]漫谈HI-FI听音评价</title>
        <link>https://hhu-vincent.github.io/post/hifi1/</link>
        <pubDate>Fri, 14 May 2021 10:06:59 +0800</pubDate>
        
        <guid>https://hhu-vincent.github.io/post/hifi1/</guid>
        <description>Vincent https://hhu-vincent.github.io/post/hifi1/ -&lt;hr&gt;
&lt;p&gt;  原文地址：&lt;a href=&#34;http://blog.sina.com.cn/s/blog_4e2a043001017gbu.html&#34;&gt;漫谈HI-FI听音评价&lt;/a&gt; 作者：&lt;a href=&#34;http://blog.sina.com.cn/u/1311376432&#34;&gt;耳机俱乐部小白&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;  HI-FI器材的声音评价，历来有主观派、客观派（数据派）、主客观结合派等不同看法。主客观结合派里，又分倾向主观的，和倾向客观的。这有点象搞政治——左派、右派、中间派、左倾的中间派、右倾的中间派，当然还有极左极右，等等。我发觉只要是人在搞的事情，就往往搞出不同的派别，而且搞到高级阶段之后，往往搞得层次很丰富。
  其实这个现象很清晰地说明了一个真理——人与人是不同的，而且可以很不同，而且对事物的不同看法，往往可以搞出丰富的层次。所以不要轻易地推己及人、轻易地判断与你不同的人！
  具体到HI-FI器材的声音评价，我个人的看法是，极端的主观派（只相信主观聆听的价值）、极端的客观派（只相信数据），都是错误的。正确的态度在两个极端之间。当然，每个人可以根据自己的偏好、经历、背景，形成略倾向主观的判断方式，或者略倾向客观的判断方式。这里我不想讨论这个。我想说的是，其实评价HI-FI器材的声音，特别是它的音乐表现力，有一个极其简单的标准，写出来就四个字。&lt;/p&gt;
&lt;p&gt;  那就是——&lt;strong&gt;不忍关机&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;  这个标准可能更适合于那些对音乐有敏锐感受力的人，或者说，音乐爱好者，或者说，是喜欢音乐的发烧友。
  我们首先必须承认一个前提——当然，不承认这个前提也可以，但我和那种人就没法沟通下去了，因为基础点都不一致——HI-FI器材是重播音乐（music）用的，而不仅是重播声音（sound）；HI-FI器材重播音乐时，声音的品质也是很重要的。如果是对音乐没有感受的人，对声音的品质没有感受的人，不懂得“声音审美”的人，那没有什么器材是“不忍关机”的，任何器材，随时都可以关掉！这是一个大的前提。
  在这个前提下，我觉得，很简单的一个判断标准就是——一个好的HI-FI器材，是能令人产生“不舍感”的，一旦在它进入状态，为你播放音乐之后，你就会被它的音质所吸引——注意不是被播放的音乐本身吸引，而是被播放器材的音质所吸引——不忍把它关掉，就希望它一直唱下去，不停地播放各类喜欢的音乐。能产生、引发出这样感觉的器材，就是一件好器材，而且不是一般性的好，而是非常的好。
  这样的器材不是经常可以遇到的。我听过的器材不算少了，但能引发这样感觉的器材，确实很少。&lt;/p&gt;
&lt;p&gt;  如果觉得这样的标准太高，那么可以降低一下，我觉得降低后的标准，可以陈述为：能一直听下去。简单说就是：耐听。如果一套系统令你听了半个小时、一个小时后开始头痛，觉得厌烦、无趣，难以听下去，那肯定是有问题的，即使它宣传的技术再先进、标出的指标再惊人，也没用。
  我这里不想提具体的器材，但我相信很多发烧友、乐迷，都有过这种类似的“不忍关机”的体验。一张好的唱片可以令人“不忍关机”，而一件好的器材，也会令人“不忍关机”。遇到这种器材时，我通常做的事情是，找出各种个人喜欢的音乐，用它来播放，然后，有时甚至可以废寝忘食，听个天昏地暗！
  在这种情况下，什么参数、技术、元件、尺寸，统统可以抛开。不管它用的是什么技术、什么元件、达到什么指标，都可以完全不顾。唯一重要的就是——它能令人不忍关机。能做到令人不忍关机的器材，超越了其他所有方面的评判标准；我个人认为，在所有可能用来评价一件HI-FI器材的各种标准之中，一旦出现了“不忍关机感”，它就是一个头等重要的定性标准。&lt;/p&gt;
&lt;p&gt;  事实上我认为“不忍关机”感的产生，是一种全面性的总结和概括，好比是一个囊括了各项失真度、频响、信噪比、动态范围等不同参数指标的“总指标”。为什么？因为如果一件器材在任何一个方面有明显的缺陷，就很难产生出“不忍关机”感。反过来说，一旦出现了不忍关机感，就证明这件器材没有什么致命漏洞，各方面都能过关，而且在表现音乐上有特别出色之处。
  就像一位美女，如果能令人“越看越爱”而产生出不可遏止的迷恋感，那她是不会有重大缺陷的。会有相对的长短板，但不可能有明显的、足以致命的缺点。
  当然，下面一句话也很重要——每个人的审美观和审美水平是有差异的。若有人对芙蓉、凤姐也“越看越爱”产生迷恋感，怎么办呢？我们是否要承认她们也是没有漏洞和缺陷的美女？若有人听一件几百块的入门器材也产生迷恋感，不舍得关机，怎么办？难道我们要承认这部几百块的器材也是极品？所以对于我的“不忍关机”学说，有一个重要的补充是 &amp;hellip;&amp;hellip;&lt;/p&gt;
&lt;p&gt;  我必须承认和指出，这是一个主观的评判标准，是因人而异的。一件器材能令我不忍关机，不等于它能令小张不忍关机，说不定小张听了10秒种就把它切掉了！那么，在这因人而异的主观判断之中，能否找到一些客观的东西呢？我觉得还是能的。&lt;/p&gt;
&lt;p&gt;  是什么呢？也是四个字——&lt;strong&gt;曾经沧海&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;  “曾经沧海”我的意思是指，一个人的审美水平，其实和他的阅历、经历，是很有关系的。甚至可以说，是一个人的审美阅历、经历，当然还有其他一些方面，决定了他的审美水平。如果一个没听过多少器材的人跑来跟我说，他发现了一个声音超好、水平超高的器材，他听得天昏地暗不舍得关机，我是不怎么会当回事的。但如果是一个我知道阅历很丰富、听过很多名机的老烧跑来跟我说这句话，我就会非常好奇和关注这部机器。
  老祖宗的话简朴而包含了至理——曾经沧海难为水。确实如此。
  其实这个道理也能很合理地解释，为什么同样一件器材，不同人会有很不同的评价。当然这里有很多因素，包括每个人的耳朵不同、声音偏好不同等，但“曾经沧海”也是一个因素。一个从没见过世面的乐迷或许听到上海交响乐团的演奏，会惊为天上之声，顶礼膜拜，而一个经常有机会听世界顶级乐团演奏的乐迷，则会无动于衷甚至提出一堆批评——每个人的眼界和审美标准是不同的！而这种不同的重要根源，就是“曾经沧海”。
  所以作为一个发烧友，很重要的一件事情就是——使自己曾经沧海！发烧最重要的是体验、是经历、是实践、是多听。发烧的最大敌人——我以前专门发贴说过——是不去体验、不去实践、不去经历、不去多听，而坐在家里单靠脑力进行YY活动。
  人的“听觉”以及“耳-脑”这一感觉模式的结果，是没有任何YY活动可以替代的。YY一辈子也只能成为YY狂，而不会YY出一个资深烧友。YY是一种脑力活动，而非感官体验。这一个道理，我想应该是不言自明的。
  而当我们面对一件器材，需要判断时，我觉得可以牢记一点——别管厂家宣称用了什么技术、什么补品元件、达到了什么技术指标，这些都可以先不管，先靠耳朵听，靠心去感受和体验，如果这件器材播放各类音乐时，都能做到让你不忍关机，一直想听下去，那它就是高水平的。即使没有那么高水平，至少，如果它使你“能一直听下去”，听个比较长的时间而不产生排斥感，那么也算是OK的。
  厂家所宣称的XX技术可以欺骗你、技术指标和参数可以被夸大、被用来忽悠你，但只有“不忍关机”四个字是不会骗人的。只要一件器材让你不忍关机，想一直听下去、一直享受地听下去，它就一定是好东西。
  人的审美过程，不管是眼-脑、耳-脑，比如看到一个女人，大脑立即反映出——“是位大美女”！或者听到一套器材，大脑立即反映出——“这个音质好”！都是一种飞速的、直接的、速度远比理智分析更快的反应。
  有没有谁看到一个女人，要先用眼睛看完，然后开始思索，逐一去分析她的眼睛、鼻子、嘴巴、肤色、身材、身体重要部位，等等，分析完了之后，才能理智地得出一个结论——她是否美女？这样做的恐怕不是人吧？是人的话，眼睛和大脑其实是联动的，或者说你根本不可能去分辨其先后过程的。看的同时，大脑已产生了结论。她是否美女，根本无须什么思考或分析。
  人听HI-FI器材的声音，岂非也是一样？！何需先用耳朵听完，然后开始思索，逐一地分析各个HI-FI要素，等分析完了之后才能理智地得出是否好声的结论？这样做的同样也不是人。是人的话，听的同时，大脑已做出即时的结论。
  这就是我所说的四字真言“不忍关机”背后的道理。当听的同时、大脑如果判断“这是好声！”，同样处于大脑控制之下的手，是不会去关机的。
  当然，如果我们需要写一个HI-FI器材的评测或听感，必须具体地描述出一件器材的声音，好在哪里、不好在哪里，那时我们才需要动用大脑进行理智的、逐项的分析——频响特征如何、音色特点如何、动态如何、声场如何，等等。这是只有在我们必须向别人描述一件器材的声音时，才不得不做的事情。&lt;/p&gt;
&lt;p&gt;  而HI-FI的声音好坏判断、欣赏，是根本无须做这种分析的。就象我们对所有事物的审美一样，是一种不假思索、无须分析，直接靠感官（眼、耳、触觉、味觉、嗅觉等）-大脑的近乎本能的一种生物反应。在这种生物反应之下，只要大脑的直接反映是“这是好声”，你的手就会不舍得去关机。就好比只要大脑的直接反映是“大美女！”，你的眼睛就会不受控制地盯住她，你的脚就会不舍得挪开，一样的道理。
  特别值得注意的是，正因为人对事物的审美是感官直接作用于大脑的，是个直觉式的、本能式的判断，所以形成“美感”最重要的一定是整体。一定是整体美，才美，我们对一件事物是否美的判断，一定是基于整体，而不是零碎的割裂；一个美女让我们觉得美，不是因为她的眼睛特别美、鼻子特别美、嘴巴特别美、任何一个部分独立的美是没有什么意义的，给予我们美感的，是整体。是她五官的整体搭配能做到just right，才使我们产生美感。当然，一个美女或许有着特别迷人的眼睛，但如果我们觉得她美，那么这个特别迷人的眼睛，和其他器官，一定能构成完好的平衡。如果失衡，就不会觉得美。
  对音质的体验和品赏也是如此——当我们听到一个声音，觉得这是好声时，不是因为它分析力最强、动态最大、高频特别优秀、或任何一个频段特别出色，而是它的“整体”才使我们觉得好声！所以好声的关键在于整体。整体的平衡、均衡、整体是否just right，是最重要的。单独一个方面再出色拔尖，而未与其他方面构成完好的平衡，是不会给我们好声之感的。我们把世界上单独最美的眼睛、最美的鼻子、最美的嘴巴凑在一起，未必是个超级美女，而且只要构成比例差一点点，就会出现一张可笑的脸蛋。声音也是如此！这是我特别想强调的一点。
  经常有些初烧友，执著于某些单方面的HI-FI因素，比如追求极致化的“解析”，追求最棒的低频、最好的高频延伸，等等，而对这些单项素质的追求狂热到不顾其他。这都是不成熟的体现，也是没有足够“曾经沧海”的体现。当他的听音余阅历丰富到一定程度，就会明白，真正好的系统、真正好的器材，声音虽各有特色，但绝大多数（我不能说没有例外）在一点上是共通的——都具有成熟而完善的平衡感，不会“越矩”，不会让某些单项过分地跳出来，导致整体失衡。我说“我不能说没有例外”，是因为确实有些例外情况，比如有些设计师的口味有些独特，有些产品的设计本身不太成功，再比如有些产品的设计，就是为了迎合那些喜欢追求某些方面极致的顾客的口味的，等等。但只要接触中高档HI-FI足够多，“曾经沧海”了，必然会知道，绝大多数的优质HI-FI、经典制品，都是声音平衡整体把握很好的、不逾矩的。&lt;/p&gt;
&lt;p&gt;  最后，我还是想重复一下，发烧的最大敌人是YY，发烧是一项重在实践的活动和爱好，希望烧友们尽量少YY，多实际地听，多听好的器材、多对比器材、多听现场的音乐演奏。另外，这也是不被忽悠的最大关键。参数指标可以忽悠你，现在很多厂家擅长这个，广告宣传的内容可以忽悠你——普通技术可能披上“先进技术”的外衣、不影响大局的几个补品元件的作用可能被无限夸大，但只有“不忍关机”是不会忽悠你的。实际地听、实际地体验、不断丰富自己的听音经验、提高对声音品质的判断力，是最为重要的，也是唯一能保障你不被忽悠的办法。&lt;/p&gt;
- https://hhu-vincent.github.io/post/hifi1/ - </description>
        </item>
    
    
    
        <item>
        <title>Link</title>
        <link>https://hhu-vincent.github.io/link/</link>
        <pubDate>Fri, 24 Jul 2020 15:29:00 +0800</pubDate>
        
        <guid>https://hhu-vincent.github.io/link/</guid>
        <description>Vincent https://hhu-vincent.github.io/link/ -&lt;p&gt;&lt;a href=&#34;https://space.bilibili.com/319311622&#34;&gt;bilibili&lt;/a&gt;&lt;/p&gt;
- https://hhu-vincent.github.io/link/ - </description>
        </item>
    
    
    
        <item>
        <title>关于我</title>
        <link>https://hhu-vincent.github.io/about/</link>
        <pubDate>Fri, 24 Jul 2020 15:29:00 +0800</pubDate>
        
        <guid>https://hhu-vincent.github.io/about/</guid>
        <description>Vincent https://hhu-vincent.github.io/about/ -&lt;p&gt;我 一个&lt;strong&gt;复杂而有趣&lt;/strong&gt;的人&lt;/p&gt;
- https://hhu-vincent.github.io/about/ - </description>
        </item>
    
    
    
        <item>
        <title>Hugo&#43;GitHub个人主页的搭建过程</title>
        <link>https://hhu-vincent.github.io/post/blog/</link>
        <pubDate>Fri, 24 Jul 2020 15:28:59 +0800</pubDate>
        
        <guid>https://hhu-vincent.github.io/post/blog/</guid>
        <description>Vincent https://hhu-vincent.github.io/post/blog/ -&lt;h2 id=&#34;前言&#34;&gt;前言&lt;/h2&gt;
&lt;hr&gt;
&lt;p&gt;很早以前我就有搭建一个个人博客的想法，用来记录一下自己的学习过程和学习成果，恰巧最近有空闲的时间，于是我开始了这次实践。对于建站我属于完全&lt;strong&gt;零基础&lt;/strong&gt;，所以一切都要从头学起。&lt;/p&gt;
&lt;h2 id=&#34;自己写or用工具搭建&#34;&gt;自己写or用工具搭建？&lt;/h2&gt;
&lt;p&gt;这个是我第一个纠结的地方，说纠结其实也不然，因为我根本就不会自己写，所以如果要自己写的话，要花不少的时间成本去学习，所以我决定利用工具和模板，搭建一个自己的个人主页，我觉得可以在搭建完再反过来利用现成的代码来学习上述的那些建站需要的技能，作为学习的实例。&lt;/p&gt;
&lt;h2 id=&#34;为什么我选择了hugo&#34;&gt;为什么我选择了Hugo&lt;/h2&gt;
&lt;p&gt;在参观别人的 blog 时，我偶然看到了一个用 hugo 搭建的 blog ，这里可以放个链接：&lt;a href=&#34;http://nanshu.wang/&#34;&gt;nanshu.wang&lt;/a&gt;，整个页面，无论是排版还是主题风格都和我理想中的 blog 相差无几，在对于建站工具没有更深了解的情况下，我直接选择了 hugo ，当然在选择后我了解到了 hugo 的一些优点，这也使我坚定了用 hugo 建站的想法。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;hugo 使用的 GO语言 是比较新的语言；&lt;/li&gt;
&lt;li&gt;hugo 是最新的生成器，功能方面也肯定集成了之前其他生成器的优点；&lt;/li&gt;
&lt;li&gt;不用安装，windows下只需要一个exe程序，就可以生成静态文件了，建站过程方便。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;hugo的安装和配置&#34;&gt;Hugo的安装和配置&lt;/h2&gt;
&lt;p&gt;因为关于 hugo 的安装教程在网上可以找到很多文章，而且并没有什么操作难度，也几乎不会碰到什么问题，只是&lt;strong&gt;不要忘记配置环境变量&lt;/strong&gt;，所以这一部分我只简略说说。
首先进行下载安装,访问&lt;a href=&#34;https://github.com/goHugoio/Hugo/releases&#34;&gt;Hugo&lt;/a&gt;，选择相应的版本下载并解压。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://gitee.com/hhu-vincent/MarkdownPhotos/raw/master/Hugo%20build%20process/hugodownload.jpg&#34; alt=&#34;hugodownload&#34;&gt;&lt;/p&gt;
&lt;p&gt;接着将 hugo.exe 所在目录添加到&lt;strong&gt;环境变量path&lt;/strong&gt;后面&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://gitee.com/hhu-vincent/MarkdownPhotos/raw/master/Hugo%20build%20process/environmentvariable.png&#34; alt=&#34;environmentvariable&#34;&gt;&lt;/p&gt;
&lt;p&gt;然后打开win+rcmd，输入&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#eed;-moz-tab-size:3;-o-tab-size:3;tab-size:3&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;hugo version
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;如果返回相应的版本信息则说明安装配置成功。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://gitee.com/hhu-vincent/MarkdownPhotos/raw/master/Hugo%20build%20process/hugoversion.jpg&#34; alt=&#34;Hugoversion&#34;&gt;&lt;/p&gt;
&lt;p&gt;除此以外还需要安装 &lt;a href=&#34;https://git-scm.com/downloads&#34;&gt;Git&lt;/a&gt;（下载链接）&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://gitee.com/hhu-vincent/MarkdownPhotos/raw/master/Hugo%20build%20process/gitdownload.jpg&#34; alt=&#34;gitdownload&#34;&gt;&lt;/p&gt;
&lt;p&gt;用来将生成好的网页推送至 GitHub 服务器，相应的安装教程网上都可以找到，此处不再赘述。&lt;/p&gt;
&lt;h2 id=&#34;hugo静态网页生成&#34;&gt;Hugo静态网页生成&lt;/h2&gt;
&lt;p&gt;hugo 自称 The world’s fastest framework for building websites ，在生成网页和配置网页的过程中，我感觉 hugo 的语法的确很简单，没有什么繁琐的需要记忆的代码，网页的生成速度也很快，我逐渐体会到了 hugo 自称的fastest。在物理和心理两个角度，给予使用者更多的便捷，这可能就是 hugo 火起来的原因吧。废话不多说，进入正题。&lt;/p&gt;
&lt;h3 id=&#34;1生成新网页&#34;&gt;1.生成新网页&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;方法一：运行cmd.exe，进入&lt;strong&gt;hugo所在目录&lt;/strong&gt;，输入下方指令，即可在 hugo目录 下生成一个blog文件夹，即静态网页文件。&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#eed;-moz-tab-size:3;-o-tab-size:3;tab-size:3&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;hugo new site blog
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;方法二：运行cmd.exe，输入下方指令，在指定路径生成 blog文件夹 ，即静态网页文件。这里要注意的是，指定的路径&lt;strong&gt;必须为空，或者不存在&lt;/strong&gt;（hugo将自动生成）&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#eed;-moz-tab-size:3;-o-tab-size:3;tab-size:3&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;hugo new site 路径
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;https://gitee.com/hhu-vincent/MarkdownPhotos/raw/master/Hugo%20build%20process/hugositecreate.png&#34; alt=&#34;Hugositecreate&#34;&gt;&lt;/p&gt;
&lt;p&gt;  我们来看下生成的blog文件夹的内容：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://gitee.com/hhu-vincent/MarkdownPhotos/raw/master/Hugo%20build%20process/whatsinblog.png&#34; alt=&#34;whatsinblog&#34;&gt;&lt;/p&gt;
&lt;p&gt;  这里我们只需要大概了解一下就可以，如果只是使用blog，我们只需要了解页面的基本配置就可以，这个之后也会讲到。&lt;/p&gt;
&lt;h3 id=&#34;2选择并安装主题&#34;&gt;2.选择并安装主题&lt;/h3&gt;
&lt;p&gt;  hugo 给使用者提供了很多现成的themes，风格各异，侧重也不同，我们只需要安装相应的主题并且配置即可使用，不需要自己设计页面样式，这也是用hugo建站的省力之处。我们可以访问官网以&lt;strong&gt;获取主题&lt;/strong&gt;：&lt;a href=&#34;https://themes.goHugo.io/&#34;&gt;Hugo Themes&lt;/a&gt;，选择blog分类，挑选你喜欢的主题。我将以我使用的 &lt;a href=&#34;https://themes.goHugo.io/Hugo-theme-diary/&#34;&gt;diary&lt;/a&gt; 主题为例介绍下载安装方法：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;下载方法一：进入主题页面，点击download，进入 GitHub 页面，选择code，&lt;strong&gt;下载.zip文件&lt;/strong&gt;，并解压到先前创建的../blog/themes文件夹。接着打开blog\config.toml，添加主题配置，theme=&amp;quot;hugo-theme-diary-master&amp;rdquo;，引号中的命名即themes文件夹中的主题文件夹名。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;https://gitee.com/hhu-vincent/MarkdownPhotos/raw/master/Hugo%20build%20process/downloadthemezip.png&#34; alt=&#34;downloadthemezip&#34;&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;下载方法二：进入主题页面，点击download，进入 GitHub 页面，复制网址，打开cmd.exe进入blog/themes文件夹，输入&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#eed;-moz-tab-size:3;-o-tab-size:3;tab-size:3&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;git clone https://github.com/AmazingRise/Hugo-theme-diary
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;  直接将主题文件下载到thenes文件夹，使用VPN可以解决下载速度慢的问题。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://gitee.com/hhu-vincent/MarkdownPhotos/raw/master/Hugo%20build%20process/gitclonethemesuccess.png&#34; alt=&#34;gitclonethemesuccess&#34;&gt;&lt;/p&gt;
&lt;p&gt;  下载完之后同样在 config.toml 中修改或添加theme配置，同上，即可使主题生效。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;如何判断主题是否生效？
在完成上述两个方法中的一个后，&lt;strong&gt;回到blog目录&lt;/strong&gt;，输入&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#eed;-moz-tab-size:3;-o-tab-size:3;tab-size:3&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;hugo server -D
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;  生成静态文件，并开启本地预览服务器。接着在浏览器中&lt;strong&gt;访问http://localhost:1313&lt;/strong&gt;，即可预览，在之后的编辑过程中，都是以这个方式进行预览和调试的，其中使用的hugo server -D是一条很常用的命令。显示如下图即说明主题配置成功：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://gitee.com/hhu-vincent/MarkdownPhotos/raw/master/Hugo%20build%20process/themesetsuccess.png&#34; alt=&#34;themesetsuccess&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;3配置基本页面菜单&#34;&gt;3.配置基本页面菜单&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;这部分网上很少看到有教程介绍，我是自己摸索学习的，所以有很多配置我还是不懂的，但是基本的思路都是一样的。首先我们先进入你先前下载的主题的文件夹中，可以看到有一个叫&lt;strong&gt;exampleSite&lt;/strong&gt;的文件夹。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;!-- raw HTML omitted --&gt;&lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;p&gt;  这个文件夹里是你使用的主题的页面的默认配置和测试用的文章，里面的 config.toml 会帮你把页面基本的主菜单，导航栏等配置好，你只要打开 config.toml ，把里面的内容复制到 blog 文件夹中的 config.toml 中，并删除一些重复配置即可，让我以diary主题为例，看看这样做的效果。这里我做一点小小的解释帮助初学者理解，在config中，[[menu.main]]即配置导航菜单，[[params.social]]即配置图标链接。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://gitee.com/hhu-vincent/MarkdownPhotos/raw/master/Hugo%20build%20process/changeConfig.png&#34; alt=&#34;changeConfig&#34;&gt;&lt;/p&gt;
&lt;p&gt;  接着和之前一样在blog目录输入&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#eed;-moz-tab-size:3;-o-tab-size:3;tab-size:3&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;hugo server -D
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;  生成静态文件，并开启本地预览服务器。接着在浏览器中&lt;strong&gt;访问http://localhost:1313&lt;/strong&gt;，预览配置，如下：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://gitee.com/hhu-vincent/MarkdownPhotos/raw/master/Hugo%20build%20process/basic.png&#34; alt=&#34;basic&#34;&gt;&lt;/p&gt;
&lt;p&gt;  可以看到页面基本的框架已经成形，你可以对应着网页&lt;strong&gt;自行增删改config中的配置&lt;/strong&gt;。页面标题、导航栏、标签栏均可以进行自定义。&lt;/p&gt;
&lt;p&gt;  在配置过程中，hugo主题自带的文档对于页面的配置也有很大的作用，每个主题都会提供&lt;strong&gt;客制化功能&lt;/strong&gt;，供使用者自行定制页面，在hugo主题下载页面下拉就可以找到，这里放一个diary的例子：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://gitee.com/hhu-vincent/MarkdownPhotos/raw/master/Hugo%20build%20process/customization.png&#34; alt=&#34;customization&#34;&gt;&lt;/p&gt;
&lt;p&gt;  你可以根据客制化指导来更改你页面的配置，丰富页面内容。&lt;/p&gt;
&lt;h3 id=&#34;4创建与编辑文章&#34;&gt;4.创建与编辑文章&lt;/h3&gt;
&lt;p&gt;1.创建&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;首先我们需要知道，hugo 的博客文章以 markdown 文件的形式写成，在学习文章的创建和上传之前，应该先去学习一下 markdown 的写法，其次应该了解本地的文章是保存在哪的，文章的标题、标签、类别是怎么设定的，我将直接从第二步开始，默认读者会写 markdown 文档。首先我们进入 blog目录用 hugo 生成一个名为post.md的新文本。&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#eed;-moz-tab-size:3;-o-tab-size:3;tab-size:3&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;hugo new post.md
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;  &lt;img src=&#34;https://gitee.com/hhu-vincent/MarkdownPhotos/raw/master/Hugo%20build%20process/newpost.png&#34; alt=&#34;newpost&#34;&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;系统返回提示，post.md文件被创建在\blog\content目录下，打开post.md可以看到新生成的markdown的默认配置。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;  &lt;img src=&#34;https://gitee.com/hhu-vincent/MarkdownPhotos/raw/master/Hugo%20build%20process/postdefault.png&#34; alt=&#34;postdefault&#34;&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;需要知道的是，&lt;strong&gt;默认配置是可以修改的&lt;/strong&gt;，可以方便以后新建文章时减少配置的时间，默认文件位于blog\archetypes，打开后可自行配置tags、categories等默认属性。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;2.编辑&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;直接用记事本打开.md文件可以直接编辑，但是记事本无法实现实时预览等扩展功能，我使用的编辑器是&lt;strong&gt;Atom&lt;/strong&gt;，是 GitHub 专门为程序员推出的一个跨平台文本编辑器。具有简洁和直观的图形用户界面，并有很多有趣的特点：支持 CSS，HTML，JavaScript 等网页编程语言。它支持宏，自动完成分屏功能，集成了文件管理器，这里小小的推荐一下&lt;a href=&#34;https://atom.io/&#34;&gt;Atom&lt;/a&gt;(官网链接)。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;页面上传github&#34;&gt;页面上传GitHub&lt;/h2&gt;
&lt;h3 id=&#34;1创建github仓库&#34;&gt;1.创建GitHub仓库&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Step 1：登录GitHub&lt;/li&gt;
&lt;li&gt;step 2：创建Repository&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;https://gitee.com/hhu-vincent/MarkdownPhotos/raw/master/Hugo%20build%20process/newRepository.png&#34; alt=&#34;newRepository&#34;&gt;&lt;/p&gt;
&lt;p&gt;  填写配置内容，创建仓库：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://gitee.com/hhu-vincent/MarkdownPhotos/raw/master/Hugo%20build%20process/createRepository.png&#34; alt=&#34;createRepository&#34;&gt;&lt;/p&gt;
&lt;p&gt;  创建完之后查看仓库的&lt;strong&gt;SSH路径&lt;/strong&gt;，在之后把本地文件推上 GitHub 服务器时会用到：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://gitee.com/hhu-vincent/MarkdownPhotos/raw/master/Hugo%20build%20process/SSH.png&#34; alt=&#34;SSH&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;2部署工作&#34;&gt;2.部署工作&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;step 1：首先需要在本地生成一个用于上传的&lt;strong&gt;静态文件夹public&lt;/strong&gt;，在cmd.exe中进入blog目录，输入：&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#eed;-moz-tab-size:3;-o-tab-size:3;tab-size:3&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;hugo
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;  你会发现 blog文件夹 中自动生成了 public文件夹 ，这个文件夹里的就是网页文件，到时候我们要上传到服务器的就是这个 public文件夹。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;step 2：部署到 GitHub ，注意这一步都是在public路径中进行，避免敲错，我给出代码，可以直接复制粘贴：&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#eed;-moz-tab-size:3;-o-tab-size:3;tab-size:3&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;//依次执行如下命令:
git init
git remote rm origin
git remote add origin SSH路径   //换成自己的GitHub上的ssh路径,在上面已经讲解如何查看ssh路径
git add -A
git commit -m &amp;#34;first commit&amp;#34;    //引号中是你这次上传行为的名字可以自行更改
git pull    //如果不行使用: git pull --rebase origin master
git push -u origin master
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;  相关的Git命令的具体含义可以自行学习了解，用多了就会熟悉。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;step 3：全部执行完后查看 GitHub 仓库，就会发现文件都已经上传了。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;https://gitee.com/hhu-vincent/MarkdownPhotos/raw/master/Hugo%20build%20process/complete.png&#34; alt=&#34;complete&#34;&gt;&lt;/p&gt;
&lt;p&gt;  最后我们要在仓库中找到 config.toml ，将&lt;strong&gt;baseurl&lt;/strong&gt;改为自己的仓库路径，也就是仓库名：xxx.github.io，之后通过 xxx.github.io 就可以访问你的网站了。&lt;/p&gt;
&lt;h2 id=&#34;结语&#34;&gt;结语&lt;/h2&gt;
&lt;p&gt;  这是我的第一篇博客，不论是网页的搭建还是文章的编辑都花了不少的时间，虽然页面仍然不够完善，但是最后看到成果的时候，还是会觉得所有花的时间都是&lt;strong&gt;值得&lt;/strong&gt;的，之后我也会完善我的网页，丰富网页内容，能够多记录自己的想法和经历，下一篇文章我准备讲一讲在文章中如何以“优雅”的方式添加图片，并且保证图片加载速度正常。&lt;/p&gt;
&lt;p&gt;  最后，要&lt;strong&gt;感谢&lt;/strong&gt;各位读者！&lt;/p&gt;
- https://hhu-vincent.github.io/post/blog/ - </description>
        </item>
    
    
  </channel>
</rss> 